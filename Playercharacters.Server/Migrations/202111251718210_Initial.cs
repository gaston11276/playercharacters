// <auto-generated />
// ReSharper disable all

using System;
using System.Data.Entity.Migrations;
using System.CodeDom.Compiler;
using System.Data.Entity.Migrations.Infrastructure;

namespace Gaston11276.Playercharacters.Server.Migrations
{
    [GeneratedCode("NFive.Migration", "0.4 Build 236")]
    public class Initial : DbMigration, IMigrationMetadata
    {
        string IMigrationMetadata.Id => "202111251718210_Initial";
        
        string IMigrationMetadata.Source => null;
        
        string IMigrationMetadata.Target => "";
        
        public override void Up()
        {
            CreateTable(
                "dbo.CharacterInventories",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        CharacterId = c.Guid(nullable: false),
                        ContainerId = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Characters", t => t.CharacterId, cascadeDelete: true)
                .ForeignKey("dbo.Containers", t => t.ContainerId, cascadeDelete: true)
                .Index(t => t.CharacterId)
                .Index(t => t.ContainerId);
            
            CreateTable(
                "dbo.Characters",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Forename = c.String(nullable: false, maxLength: 100, unicode: false),
                        Middlename = c.String(maxLength: 100, unicode: false),
                        Surname = c.String(nullable: false, maxLength: 100, unicode: false),
                        DateOfBirth = c.DateTime(nullable: false, precision: 0),
                        Gender = c.Short(nullable: false),
                        Alive = c.Boolean(nullable: false, storeType: "bit"),
                        Health = c.Int(nullable: false),
                        Armor = c.Int(nullable: false),
                        Ssn = c.Int(nullable: false),
                        Position_X = c.Single(nullable: false),
                        Position_Y = c.Single(nullable: false),
                        Position_Z = c.Single(nullable: false),
                        Model = c.String(nullable: false, maxLength: 200, unicode: false),
                        AnimationSet = c.String(nullable: false, maxLength: 200, unicode: false),
                        PedHeadBlendDataId = c.Guid(nullable: false),
                        PedFaceFeaturesId = c.Guid(nullable: false),
                        PedHeadOverlaysId = c.Guid(nullable: false),
                        PedDecorationsId = c.Guid(nullable: false),
                        PedComponentsId = c.Guid(nullable: false),
                        PedHairColor = c.Int(nullable: false),
                        PedSecondHairColor = c.Int(nullable: false),
                        PedEyeColor = c.Int(nullable: false),
                        PedPropsId = c.Guid(nullable: false),
                        LastPlayed = c.DateTime(precision: 0),
                        UserId = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.PedComponents", t => t.PedComponentsId, cascadeDelete: true)
                .ForeignKey("dbo.PedDecorations", t => t.PedDecorationsId, cascadeDelete: true)
                .ForeignKey("dbo.PedFaceFeatures", t => t.PedFaceFeaturesId, cascadeDelete: true)
                .ForeignKey("dbo.PedHeadBlendDatas", t => t.PedHeadBlendDataId, cascadeDelete: true)
                .ForeignKey("dbo.PedHeadOverlays", t => t.PedHeadOverlaysId, cascadeDelete: true)
                .ForeignKey("dbo.PedProps", t => t.PedPropsId, cascadeDelete: true)
                .ForeignKey("dbo.Users", t => t.UserId, cascadeDelete: true)
                .Index(t => t.PedHeadBlendDataId)
                .Index(t => t.PedFaceFeaturesId)
                .Index(t => t.PedHeadOverlaysId)
                .Index(t => t.PedDecorationsId)
                .Index(t => t.PedComponentsId)
                .Index(t => t.PedPropsId)
                .Index(t => t.UserId);
            
            CreateTable(
                "dbo.PedComponents",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Face_Type = c.Int(nullable: false),
                        Face_Index = c.Int(nullable: false),
                        Face_Texture = c.Int(nullable: false),
                        Mask_Type = c.Int(nullable: false),
                        Mask_Index = c.Int(nullable: false),
                        Mask_Texture = c.Int(nullable: false),
                        Hair_Type = c.Int(nullable: false),
                        Hair_Index = c.Int(nullable: false),
                        Hair_Texture = c.Int(nullable: false),
                        Torso_Type = c.Int(nullable: false),
                        Torso_Index = c.Int(nullable: false),
                        Torso_Texture = c.Int(nullable: false),
                        Legs_Type = c.Int(nullable: false),
                        Legs_Index = c.Int(nullable: false),
                        Legs_Texture = c.Int(nullable: false),
                        Back_Type = c.Int(nullable: false),
                        Back_Index = c.Int(nullable: false),
                        Back_Texture = c.Int(nullable: false),
                        Shoes_Type = c.Int(nullable: false),
                        Shoes_Index = c.Int(nullable: false),
                        Shoes_Texture = c.Int(nullable: false),
                        Accessory_Type = c.Int(nullable: false),
                        Accessory_Index = c.Int(nullable: false),
                        Accessory_Texture = c.Int(nullable: false),
                        Undershirt_Type = c.Int(nullable: false),
                        Undershirt_Index = c.Int(nullable: false),
                        Undershirt_Texture = c.Int(nullable: false),
                        Kevlar_Type = c.Int(nullable: false),
                        Kevlar_Index = c.Int(nullable: false),
                        Kevlar_Texture = c.Int(nullable: false),
                        Badge_Type = c.Int(nullable: false),
                        Badge_Index = c.Int(nullable: false),
                        Badge_Texture = c.Int(nullable: false),
                        Torso2_Type = c.Int(nullable: false),
                        Torso2_Index = c.Int(nullable: false),
                        Torso2_Texture = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.PedDecorations",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        ChestTop_Type = c.Int(nullable: false),
                        ChestTop_Zone = c.Int(nullable: false),
                        ChestTop_Index = c.Int(nullable: false),
                        ChestTop_Collection = c.Int(nullable: false),
                        ChestTop_Overlay = c.Int(nullable: false),
                        ChestTopLeft_Type = c.Int(nullable: false),
                        ChestTopLeft_Zone = c.Int(nullable: false),
                        ChestTopLeft_Index = c.Int(nullable: false),
                        ChestTopLeft_Collection = c.Int(nullable: false),
                        ChestTopLeft_Overlay = c.Int(nullable: false),
                        ChestTopRight_Type = c.Int(nullable: false),
                        ChestTopRight_Zone = c.Int(nullable: false),
                        ChestTopRight_Index = c.Int(nullable: false),
                        ChestTopRight_Collection = c.Int(nullable: false),
                        ChestTopRight_Overlay = c.Int(nullable: false),
                        ChestUpper_Type = c.Int(nullable: false),
                        ChestUpper_Zone = c.Int(nullable: false),
                        ChestUpper_Index = c.Int(nullable: false),
                        ChestUpper_Collection = c.Int(nullable: false),
                        ChestUpper_Overlay = c.Int(nullable: false),
                        ChestUpperLeft_Type = c.Int(nullable: false),
                        ChestUpperLeft_Zone = c.Int(nullable: false),
                        ChestUpperLeft_Index = c.Int(nullable: false),
                        ChestUpperLeft_Collection = c.Int(nullable: false),
                        ChestUpperLeft_Overlay = c.Int(nullable: false),
                        ChestUpperRight_Type = c.Int(nullable: false),
                        ChestUpperRight_Zone = c.Int(nullable: false),
                        ChestUpperRight_Index = c.Int(nullable: false),
                        ChestUpperRight_Collection = c.Int(nullable: false),
                        ChestUpperRight_Overlay = c.Int(nullable: false),
                        ChestMiddle_Type = c.Int(nullable: false),
                        ChestMiddle_Zone = c.Int(nullable: false),
                        ChestMiddle_Index = c.Int(nullable: false),
                        ChestMiddle_Collection = c.Int(nullable: false),
                        ChestMiddle_Overlay = c.Int(nullable: false),
                        ChestMiddleLeft_Type = c.Int(nullable: false),
                        ChestMiddleLeft_Zone = c.Int(nullable: false),
                        ChestMiddleLeft_Index = c.Int(nullable: false),
                        ChestMiddleLeft_Collection = c.Int(nullable: false),
                        ChestMiddleLeft_Overlay = c.Int(nullable: false),
                        ChestMiddleRight_Type = c.Int(nullable: false),
                        ChestMiddleRight_Zone = c.Int(nullable: false),
                        ChestMiddleRight_Index = c.Int(nullable: false),
                        ChestMiddleRight_Collection = c.Int(nullable: false),
                        ChestMiddleRight_Overlay = c.Int(nullable: false),
                        ChestLower_Type = c.Int(nullable: false),
                        ChestLower_Zone = c.Int(nullable: false),
                        ChestLower_Index = c.Int(nullable: false),
                        ChestLower_Collection = c.Int(nullable: false),
                        ChestLower_Overlay = c.Int(nullable: false),
                        ChestLowerLeft_Type = c.Int(nullable: false),
                        ChestLowerLeft_Zone = c.Int(nullable: false),
                        ChestLowerLeft_Index = c.Int(nullable: false),
                        ChestLowerLeft_Collection = c.Int(nullable: false),
                        ChestLowerLeft_Overlay = c.Int(nullable: false),
                        ChestLowerRight_Type = c.Int(nullable: false),
                        ChestLowerRight_Zone = c.Int(nullable: false),
                        ChestLowerRight_Index = c.Int(nullable: false),
                        ChestLowerRight_Collection = c.Int(nullable: false),
                        ChestLowerRight_Overlay = c.Int(nullable: false),
                        SideUpperLeft_Type = c.Int(nullable: false),
                        SideUpperLeft_Zone = c.Int(nullable: false),
                        SideUpperLeft_Index = c.Int(nullable: false),
                        SideUpperLeft_Collection = c.Int(nullable: false),
                        SideUpperLeft_Overlay = c.Int(nullable: false),
                        SideUpperRight_Type = c.Int(nullable: false),
                        SideUpperRight_Zone = c.Int(nullable: false),
                        SideUpperRight_Index = c.Int(nullable: false),
                        SideUpperRight_Collection = c.Int(nullable: false),
                        SideUpperRight_Overlay = c.Int(nullable: false),
                        SideMiddleLeft_Type = c.Int(nullable: false),
                        SideMiddleLeft_Zone = c.Int(nullable: false),
                        SideMiddleLeft_Index = c.Int(nullable: false),
                        SideMiddleLeft_Collection = c.Int(nullable: false),
                        SideMiddleLeft_Overlay = c.Int(nullable: false),
                        SideMiddleRight_Type = c.Int(nullable: false),
                        SideMiddleRight_Zone = c.Int(nullable: false),
                        SideMiddleRight_Index = c.Int(nullable: false),
                        SideMiddleRight_Collection = c.Int(nullable: false),
                        SideMiddleRight_Overlay = c.Int(nullable: false),
                        SideLowerLeft_Type = c.Int(nullable: false),
                        SideLowerLeft_Zone = c.Int(nullable: false),
                        SideLowerLeft_Index = c.Int(nullable: false),
                        SideLowerLeft_Collection = c.Int(nullable: false),
                        SideLowerLeft_Overlay = c.Int(nullable: false),
                        SideLowerRight_Type = c.Int(nullable: false),
                        SideLowerRight_Zone = c.Int(nullable: false),
                        SideLowerRight_Index = c.Int(nullable: false),
                        SideLowerRight_Collection = c.Int(nullable: false),
                        SideLowerRight_Overlay = c.Int(nullable: false),
                        NeckFront_Type = c.Int(nullable: false),
                        NeckFront_Zone = c.Int(nullable: false),
                        NeckFront_Index = c.Int(nullable: false),
                        NeckFront_Collection = c.Int(nullable: false),
                        NeckFront_Overlay = c.Int(nullable: false),
                        NeckBack_Type = c.Int(nullable: false),
                        NeckBack_Zone = c.Int(nullable: false),
                        NeckBack_Index = c.Int(nullable: false),
                        NeckBack_Collection = c.Int(nullable: false),
                        NeckBack_Overlay = c.Int(nullable: false),
                        NeckLeft_Type = c.Int(nullable: false),
                        NeckLeft_Zone = c.Int(nullable: false),
                        NeckLeft_Index = c.Int(nullable: false),
                        NeckLeft_Collection = c.Int(nullable: false),
                        NeckLeft_Overlay = c.Int(nullable: false),
                        NeckRight_Type = c.Int(nullable: false),
                        NeckRight_Zone = c.Int(nullable: false),
                        NeckRight_Index = c.Int(nullable: false),
                        NeckRight_Collection = c.Int(nullable: false),
                        NeckRight_Overlay = c.Int(nullable: false),
                        BackTop_Type = c.Int(nullable: false),
                        BackTop_Zone = c.Int(nullable: false),
                        BackTop_Index = c.Int(nullable: false),
                        BackTop_Collection = c.Int(nullable: false),
                        BackTop_Overlay = c.Int(nullable: false),
                        BackTopLeft_Type = c.Int(nullable: false),
                        BackTopLeft_Zone = c.Int(nullable: false),
                        BackTopLeft_Index = c.Int(nullable: false),
                        BackTopLeft_Collection = c.Int(nullable: false),
                        BackTopLeft_Overlay = c.Int(nullable: false),
                        BackTopRight_Type = c.Int(nullable: false),
                        BackTopRight_Zone = c.Int(nullable: false),
                        BackTopRight_Index = c.Int(nullable: false),
                        BackTopRight_Collection = c.Int(nullable: false),
                        BackTopRight_Overlay = c.Int(nullable: false),
                        BackUpper_Type = c.Int(nullable: false),
                        BackUpper_Zone = c.Int(nullable: false),
                        BackUpper_Index = c.Int(nullable: false),
                        BackUpper_Collection = c.Int(nullable: false),
                        BackUpper_Overlay = c.Int(nullable: false),
                        BackUpperLeft_Type = c.Int(nullable: false),
                        BackUpperLeft_Zone = c.Int(nullable: false),
                        BackUpperLeft_Index = c.Int(nullable: false),
                        BackUpperLeft_Collection = c.Int(nullable: false),
                        BackUpperLeft_Overlay = c.Int(nullable: false),
                        BackUpperRight_Type = c.Int(nullable: false),
                        BackUpperRight_Zone = c.Int(nullable: false),
                        BackUpperRight_Index = c.Int(nullable: false),
                        BackUpperRight_Collection = c.Int(nullable: false),
                        BackUpperRight_Overlay = c.Int(nullable: false),
                        BackMiddle_Type = c.Int(nullable: false),
                        BackMiddle_Zone = c.Int(nullable: false),
                        BackMiddle_Index = c.Int(nullable: false),
                        BackMiddle_Collection = c.Int(nullable: false),
                        BackMiddle_Overlay = c.Int(nullable: false),
                        BackMiddleLeft_Type = c.Int(nullable: false),
                        BackMiddleLeft_Zone = c.Int(nullable: false),
                        BackMiddleLeft_Index = c.Int(nullable: false),
                        BackMiddleLeft_Collection = c.Int(nullable: false),
                        BackMiddleLeft_Overlay = c.Int(nullable: false),
                        BackMiddleRight_Type = c.Int(nullable: false),
                        BackMiddleRight_Zone = c.Int(nullable: false),
                        BackMiddleRight_Index = c.Int(nullable: false),
                        BackMiddleRight_Collection = c.Int(nullable: false),
                        BackMiddleRight_Overlay = c.Int(nullable: false),
                        BackLower_Type = c.Int(nullable: false),
                        BackLower_Zone = c.Int(nullable: false),
                        BackLower_Index = c.Int(nullable: false),
                        BackLower_Collection = c.Int(nullable: false),
                        BackLower_Overlay = c.Int(nullable: false),
                        BackLowerLeft_Type = c.Int(nullable: false),
                        BackLowerLeft_Zone = c.Int(nullable: false),
                        BackLowerLeft_Index = c.Int(nullable: false),
                        BackLowerLeft_Collection = c.Int(nullable: false),
                        BackLowerLeft_Overlay = c.Int(nullable: false),
                        BackLowerRight_Type = c.Int(nullable: false),
                        BackLowerRight_Zone = c.Int(nullable: false),
                        BackLowerRight_Index = c.Int(nullable: false),
                        BackLowerRight_Collection = c.Int(nullable: false),
                        BackLowerRight_Overlay = c.Int(nullable: false),
                        ArmSideUpperLeft_Type = c.Int(nullable: false),
                        ArmSideUpperLeft_Zone = c.Int(nullable: false),
                        ArmSideUpperLeft_Index = c.Int(nullable: false),
                        ArmSideUpperLeft_Collection = c.Int(nullable: false),
                        ArmSideUpperLeft_Overlay = c.Int(nullable: false),
                        ArmSideUpperRight_Type = c.Int(nullable: false),
                        ArmSideUpperRight_Zone = c.Int(nullable: false),
                        ArmSideUpperRight_Index = c.Int(nullable: false),
                        ArmSideUpperRight_Collection = c.Int(nullable: false),
                        ArmSideUpperRight_Overlay = c.Int(nullable: false),
                        ArmSideMiddleLeft_Type = c.Int(nullable: false),
                        ArmSideMiddleLeft_Zone = c.Int(nullable: false),
                        ArmSideMiddleLeft_Index = c.Int(nullable: false),
                        ArmSideMiddleLeft_Collection = c.Int(nullable: false),
                        ArmSideMiddleLeft_Overlay = c.Int(nullable: false),
                        ArmSideMiddleRight_Type = c.Int(nullable: false),
                        ArmSideMiddleRight_Zone = c.Int(nullable: false),
                        ArmSideMiddleRight_Index = c.Int(nullable: false),
                        ArmSideMiddleRight_Collection = c.Int(nullable: false),
                        ArmSideMiddleRight_Overlay = c.Int(nullable: false),
                        ArmSideLowerLeft_Type = c.Int(nullable: false),
                        ArmSideLowerLeft_Zone = c.Int(nullable: false),
                        ArmSideLowerLeft_Index = c.Int(nullable: false),
                        ArmSideLowerLeft_Collection = c.Int(nullable: false),
                        ArmSideLowerLeft_Overlay = c.Int(nullable: false),
                        ArmSideLowerRight_Type = c.Int(nullable: false),
                        ArmSideLowerRight_Zone = c.Int(nullable: false),
                        ArmSideLowerRight_Index = c.Int(nullable: false),
                        ArmSideLowerRight_Collection = c.Int(nullable: false),
                        ArmSideLowerRight_Overlay = c.Int(nullable: false),
                        ArmFrontUpperLeft_Type = c.Int(nullable: false),
                        ArmFrontUpperLeft_Zone = c.Int(nullable: false),
                        ArmFrontUpperLeft_Index = c.Int(nullable: false),
                        ArmFrontUpperLeft_Collection = c.Int(nullable: false),
                        ArmFrontUpperLeft_Overlay = c.Int(nullable: false),
                        ArmFrontUpperRight_Type = c.Int(nullable: false),
                        ArmFrontUpperRight_Zone = c.Int(nullable: false),
                        ArmFrontUpperRight_Index = c.Int(nullable: false),
                        ArmFrontUpperRight_Collection = c.Int(nullable: false),
                        ArmFrontUpperRight_Overlay = c.Int(nullable: false),
                        ArmFrontMiddleLeft_Type = c.Int(nullable: false),
                        ArmFrontMiddleLeft_Zone = c.Int(nullable: false),
                        ArmFrontMiddleLeft_Index = c.Int(nullable: false),
                        ArmFrontMiddleLeft_Collection = c.Int(nullable: false),
                        ArmFrontMiddleLeft_Overlay = c.Int(nullable: false),
                        ArmFrontMiddleRight_Type = c.Int(nullable: false),
                        ArmFrontMiddleRight_Zone = c.Int(nullable: false),
                        ArmFrontMiddleRight_Index = c.Int(nullable: false),
                        ArmFrontMiddleRight_Collection = c.Int(nullable: false),
                        ArmFrontMiddleRight_Overlay = c.Int(nullable: false),
                        ArmFrontLowerLeft_Type = c.Int(nullable: false),
                        ArmFrontLowerLeft_Zone = c.Int(nullable: false),
                        ArmFrontLowerLeft_Index = c.Int(nullable: false),
                        ArmFrontLowerLeft_Collection = c.Int(nullable: false),
                        ArmFrontLowerLeft_Overlay = c.Int(nullable: false),
                        ArmFrontLowerRight_Type = c.Int(nullable: false),
                        ArmFrontLowerRight_Zone = c.Int(nullable: false),
                        ArmFrontLowerRight_Index = c.Int(nullable: false),
                        ArmFrontLowerRight_Collection = c.Int(nullable: false),
                        ArmFrontLowerRight_Overlay = c.Int(nullable: false),
                        ArmInsideUpperLeft_Type = c.Int(nullable: false),
                        ArmInsideUpperLeft_Zone = c.Int(nullable: false),
                        ArmInsideUpperLeft_Index = c.Int(nullable: false),
                        ArmInsideUpperLeft_Collection = c.Int(nullable: false),
                        ArmInsideUpperLeft_Overlay = c.Int(nullable: false),
                        ArmInsideUpperRight_Type = c.Int(nullable: false),
                        ArmInsideUpperRight_Zone = c.Int(nullable: false),
                        ArmInsideUpperRight_Index = c.Int(nullable: false),
                        ArmInsideUpperRight_Collection = c.Int(nullable: false),
                        ArmInsideUpperRight_Overlay = c.Int(nullable: false),
                        ArmInsideMiddleLeft_Type = c.Int(nullable: false),
                        ArmInsideMiddleLeft_Zone = c.Int(nullable: false),
                        ArmInsideMiddleLeft_Index = c.Int(nullable: false),
                        ArmInsideMiddleLeft_Collection = c.Int(nullable: false),
                        ArmInsideMiddleLeft_Overlay = c.Int(nullable: false),
                        ArmInsideMiddleRight_Type = c.Int(nullable: false),
                        ArmInsideMiddleRight_Zone = c.Int(nullable: false),
                        ArmInsideMiddleRight_Index = c.Int(nullable: false),
                        ArmInsideMiddleRight_Collection = c.Int(nullable: false),
                        ArmInsideMiddleRight_Overlay = c.Int(nullable: false),
                        ArmInsideLowerLeft_Type = c.Int(nullable: false),
                        ArmInsideLowerLeft_Zone = c.Int(nullable: false),
                        ArmInsideLowerLeft_Index = c.Int(nullable: false),
                        ArmInsideLowerLeft_Collection = c.Int(nullable: false),
                        ArmInsideLowerLeft_Overlay = c.Int(nullable: false),
                        ArmInsideLowerRight_Type = c.Int(nullable: false),
                        ArmInsideLowerRight_Zone = c.Int(nullable: false),
                        ArmInsideLowerRight_Index = c.Int(nullable: false),
                        ArmInsideLowerRight_Collection = c.Int(nullable: false),
                        ArmInsideLowerRight_Overlay = c.Int(nullable: false),
                        ArmBackUpperLeft_Type = c.Int(nullable: false),
                        ArmBackUpperLeft_Zone = c.Int(nullable: false),
                        ArmBackUpperLeft_Index = c.Int(nullable: false),
                        ArmBackUpperLeft_Collection = c.Int(nullable: false),
                        ArmBackUpperLeft_Overlay = c.Int(nullable: false),
                        ArmBackUpperRight_Type = c.Int(nullable: false),
                        ArmBackUpperRight_Zone = c.Int(nullable: false),
                        ArmBackUpperRight_Index = c.Int(nullable: false),
                        ArmBackUpperRight_Collection = c.Int(nullable: false),
                        ArmBackUpperRight_Overlay = c.Int(nullable: false),
                        ArmBackMiddleLeft_Type = c.Int(nullable: false),
                        ArmBackMiddleLeft_Zone = c.Int(nullable: false),
                        ArmBackMiddleLeft_Index = c.Int(nullable: false),
                        ArmBackMiddleLeft_Collection = c.Int(nullable: false),
                        ArmBackMiddleLeft_Overlay = c.Int(nullable: false),
                        ArmBackMiddleRight_Type = c.Int(nullable: false),
                        ArmBackMiddleRight_Zone = c.Int(nullable: false),
                        ArmBackMiddleRight_Index = c.Int(nullable: false),
                        ArmBackMiddleRight_Collection = c.Int(nullable: false),
                        ArmBackMiddleRight_Overlay = c.Int(nullable: false),
                        ArmBackLowerLeft_Type = c.Int(nullable: false),
                        ArmBackLowerLeft_Zone = c.Int(nullable: false),
                        ArmBackLowerLeft_Index = c.Int(nullable: false),
                        ArmBackLowerLeft_Collection = c.Int(nullable: false),
                        ArmBackLowerLeft_Overlay = c.Int(nullable: false),
                        ArmBackLowerRight_Type = c.Int(nullable: false),
                        ArmBackLowerRight_Zone = c.Int(nullable: false),
                        ArmBackLowerRight_Index = c.Int(nullable: false),
                        ArmBackLowerRight_Collection = c.Int(nullable: false),
                        ArmBackLowerRight_Overlay = c.Int(nullable: false),
                        LegSideUpperLeft_Type = c.Int(nullable: false),
                        LegSideUpperLeft_Zone = c.Int(nullable: false),
                        LegSideUpperLeft_Index = c.Int(nullable: false),
                        LegSideUpperLeft_Collection = c.Int(nullable: false),
                        LegSideUpperLeft_Overlay = c.Int(nullable: false),
                        LegSideUpperRight_Type = c.Int(nullable: false),
                        LegSideUpperRight_Zone = c.Int(nullable: false),
                        LegSideUpperRight_Index = c.Int(nullable: false),
                        LegSideUpperRight_Collection = c.Int(nullable: false),
                        LegSideUpperRight_Overlay = c.Int(nullable: false),
                        LegSideMiddleLeft_Type = c.Int(nullable: false),
                        LegSideMiddleLeft_Zone = c.Int(nullable: false),
                        LegSideMiddleLeft_Index = c.Int(nullable: false),
                        LegSideMiddleLeft_Collection = c.Int(nullable: false),
                        LegSideMiddleLeft_Overlay = c.Int(nullable: false),
                        LegSideMiddleRight_Type = c.Int(nullable: false),
                        LegSideMiddleRight_Zone = c.Int(nullable: false),
                        LegSideMiddleRight_Index = c.Int(nullable: false),
                        LegSideMiddleRight_Collection = c.Int(nullable: false),
                        LegSideMiddleRight_Overlay = c.Int(nullable: false),
                        LegSideLowerLeft_Type = c.Int(nullable: false),
                        LegSideLowerLeft_Zone = c.Int(nullable: false),
                        LegSideLowerLeft_Index = c.Int(nullable: false),
                        LegSideLowerLeft_Collection = c.Int(nullable: false),
                        LegSideLowerLeft_Overlay = c.Int(nullable: false),
                        LegSideLowerRight_Type = c.Int(nullable: false),
                        LegSideLowerRight_Zone = c.Int(nullable: false),
                        LegSideLowerRight_Index = c.Int(nullable: false),
                        LegSideLowerRight_Collection = c.Int(nullable: false),
                        LegSideLowerRight_Overlay = c.Int(nullable: false),
                        LegFrontUpperLeft_Type = c.Int(nullable: false),
                        LegFrontUpperLeft_Zone = c.Int(nullable: false),
                        LegFrontUpperLeft_Index = c.Int(nullable: false),
                        LegFrontUpperLeft_Collection = c.Int(nullable: false),
                        LegFrontUpperLeft_Overlay = c.Int(nullable: false),
                        LegFrontUpperRight_Type = c.Int(nullable: false),
                        LegFrontUpperRight_Zone = c.Int(nullable: false),
                        LegFrontUpperRight_Index = c.Int(nullable: false),
                        LegFrontUpperRight_Collection = c.Int(nullable: false),
                        LegFrontUpperRight_Overlay = c.Int(nullable: false),
                        LegFrontMiddleLeft_Type = c.Int(nullable: false),
                        LegFrontMiddleLeft_Zone = c.Int(nullable: false),
                        LegFrontMiddleLeft_Index = c.Int(nullable: false),
                        LegFrontMiddleLeft_Collection = c.Int(nullable: false),
                        LegFrontMiddleLeft_Overlay = c.Int(nullable: false),
                        LegFrontMiddleRight_Type = c.Int(nullable: false),
                        LegFrontMiddleRight_Zone = c.Int(nullable: false),
                        LegFrontMiddleRight_Index = c.Int(nullable: false),
                        LegFrontMiddleRight_Collection = c.Int(nullable: false),
                        LegFrontMiddleRight_Overlay = c.Int(nullable: false),
                        LegFrontLowerLeft_Type = c.Int(nullable: false),
                        LegFrontLowerLeft_Zone = c.Int(nullable: false),
                        LegFrontLowerLeft_Index = c.Int(nullable: false),
                        LegFrontLowerLeft_Collection = c.Int(nullable: false),
                        LegFrontLowerLeft_Overlay = c.Int(nullable: false),
                        LegFrontLowerRight_Type = c.Int(nullable: false),
                        LegFrontLowerRight_Zone = c.Int(nullable: false),
                        LegFrontLowerRight_Index = c.Int(nullable: false),
                        LegFrontLowerRight_Collection = c.Int(nullable: false),
                        LegFrontLowerRight_Overlay = c.Int(nullable: false),
                        LegBackUpperLeft_Type = c.Int(nullable: false),
                        LegBackUpperLeft_Zone = c.Int(nullable: false),
                        LegBackUpperLeft_Index = c.Int(nullable: false),
                        LegBackUpperLeft_Collection = c.Int(nullable: false),
                        LegBackUpperLeft_Overlay = c.Int(nullable: false),
                        LegBackUpperRight_Type = c.Int(nullable: false),
                        LegBackUpperRight_Zone = c.Int(nullable: false),
                        LegBackUpperRight_Index = c.Int(nullable: false),
                        LegBackUpperRight_Collection = c.Int(nullable: false),
                        LegBackUpperRight_Overlay = c.Int(nullable: false),
                        LegBackMiddleLeft_Type = c.Int(nullable: false),
                        LegBackMiddleLeft_Zone = c.Int(nullable: false),
                        LegBackMiddleLeft_Index = c.Int(nullable: false),
                        LegBackMiddleLeft_Collection = c.Int(nullable: false),
                        LegBackMiddleLeft_Overlay = c.Int(nullable: false),
                        LegBackMiddleRight_Type = c.Int(nullable: false),
                        LegBackMiddleRight_Zone = c.Int(nullable: false),
                        LegBackMiddleRight_Index = c.Int(nullable: false),
                        LegBackMiddleRight_Collection = c.Int(nullable: false),
                        LegBackMiddleRight_Overlay = c.Int(nullable: false),
                        LegBackLowerLeft_Type = c.Int(nullable: false),
                        LegBackLowerLeft_Zone = c.Int(nullable: false),
                        LegBackLowerLeft_Index = c.Int(nullable: false),
                        LegBackLowerLeft_Collection = c.Int(nullable: false),
                        LegBackLowerLeft_Overlay = c.Int(nullable: false),
                        LegBackLowerRight_Type = c.Int(nullable: false),
                        LegBackLowerRight_Zone = c.Int(nullable: false),
                        LegBackLowerRight_Index = c.Int(nullable: false),
                        LegBackLowerRight_Collection = c.Int(nullable: false),
                        LegBackLowerRight_Overlay = c.Int(nullable: false),
                        Face_Type = c.Int(nullable: false),
                        Face_Zone = c.Int(nullable: false),
                        Face_Index = c.Int(nullable: false),
                        Face_Collection = c.Int(nullable: false),
                        Face_Overlay = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.PedFaceFeatures",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        NoseWidth = c.Single(nullable: false),
                        NosePeakHeight = c.Single(nullable: false),
                        NosePeakLength = c.Single(nullable: false),
                        NoseBoneHeight = c.Single(nullable: false),
                        NosePeakLowering = c.Single(nullable: false),
                        NoseBoneTwist = c.Single(nullable: false),
                        EyeBrowHeight = c.Single(nullable: false),
                        EyeBrowForward = c.Single(nullable: false),
                        CheekBoneHeight = c.Single(nullable: false),
                        CheekBoneWidth = c.Single(nullable: false),
                        CheekWidth = c.Single(nullable: false),
                        EyesOpening = c.Single(nullable: false),
                        LipThickness = c.Single(nullable: false),
                        JawBoneWidth = c.Single(nullable: false),
                        JawBoneLength = c.Single(nullable: false),
                        ChinBoneLowering = c.Single(nullable: false),
                        ChinBoneLength = c.Single(nullable: false),
                        ChinBoneWidth = c.Single(nullable: false),
                        ChinDimple = c.Single(nullable: false),
                        NeckThickness = c.Single(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.PedHeadBlendDatas",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Parent1 = c.Int(nullable: false),
                        Parent2 = c.Int(nullable: false),
                        ShapeMix = c.Single(nullable: false),
                        SkinMix = c.Single(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.PedHeadOverlays",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Blemishes_Type = c.Int(nullable: false),
                        Blemishes_Index = c.Int(nullable: false),
                        Blemishes_Opacity = c.Single(nullable: false),
                        Blemishes_ColorType = c.Int(nullable: false),
                        Blemishes_ColorId = c.Int(nullable: false),
                        Blemishes_SecondColorId = c.Int(nullable: false),
                        FacialHair_Type = c.Int(nullable: false),
                        FacialHair_Index = c.Int(nullable: false),
                        FacialHair_Opacity = c.Single(nullable: false),
                        FacialHair_ColorType = c.Int(nullable: false),
                        FacialHair_ColorId = c.Int(nullable: false),
                        FacialHair_SecondColorId = c.Int(nullable: false),
                        Eyebrows_Type = c.Int(nullable: false),
                        Eyebrows_Index = c.Int(nullable: false),
                        Eyebrows_Opacity = c.Single(nullable: false),
                        Eyebrows_ColorType = c.Int(nullable: false),
                        Eyebrows_ColorId = c.Int(nullable: false),
                        Eyebrows_SecondColorId = c.Int(nullable: false),
                        Ageing_Type = c.Int(nullable: false),
                        Ageing_Index = c.Int(nullable: false),
                        Ageing_Opacity = c.Single(nullable: false),
                        Ageing_ColorType = c.Int(nullable: false),
                        Ageing_ColorId = c.Int(nullable: false),
                        Ageing_SecondColorId = c.Int(nullable: false),
                        Makeup_Type = c.Int(nullable: false),
                        Makeup_Index = c.Int(nullable: false),
                        Makeup_Opacity = c.Single(nullable: false),
                        Makeup_ColorType = c.Int(nullable: false),
                        Makeup_ColorId = c.Int(nullable: false),
                        Makeup_SecondColorId = c.Int(nullable: false),
                        Blush_Type = c.Int(nullable: false),
                        Blush_Index = c.Int(nullable: false),
                        Blush_Opacity = c.Single(nullable: false),
                        Blush_ColorType = c.Int(nullable: false),
                        Blush_ColorId = c.Int(nullable: false),
                        Blush_SecondColorId = c.Int(nullable: false),
                        Complexion_Type = c.Int(nullable: false),
                        Complexion_Index = c.Int(nullable: false),
                        Complexion_Opacity = c.Single(nullable: false),
                        Complexion_ColorType = c.Int(nullable: false),
                        Complexion_ColorId = c.Int(nullable: false),
                        Complexion_SecondColorId = c.Int(nullable: false),
                        SunDamage_Type = c.Int(nullable: false),
                        SunDamage_Index = c.Int(nullable: false),
                        SunDamage_Opacity = c.Single(nullable: false),
                        SunDamage_ColorType = c.Int(nullable: false),
                        SunDamage_ColorId = c.Int(nullable: false),
                        SunDamage_SecondColorId = c.Int(nullable: false),
                        Lipstick_Type = c.Int(nullable: false),
                        Lipstick_Index = c.Int(nullable: false),
                        Lipstick_Opacity = c.Single(nullable: false),
                        Lipstick_ColorType = c.Int(nullable: false),
                        Lipstick_ColorId = c.Int(nullable: false),
                        Lipstick_SecondColorId = c.Int(nullable: false),
                        MolesAndFreckles_Type = c.Int(nullable: false),
                        MolesAndFreckles_Index = c.Int(nullable: false),
                        MolesAndFreckles_Opacity = c.Single(nullable: false),
                        MolesAndFreckles_ColorType = c.Int(nullable: false),
                        MolesAndFreckles_ColorId = c.Int(nullable: false),
                        MolesAndFreckles_SecondColorId = c.Int(nullable: false),
                        ChestHair_Type = c.Int(nullable: false),
                        ChestHair_Index = c.Int(nullable: false),
                        ChestHair_Opacity = c.Single(nullable: false),
                        ChestHair_ColorType = c.Int(nullable: false),
                        ChestHair_ColorId = c.Int(nullable: false),
                        ChestHair_SecondColorId = c.Int(nullable: false),
                        BodyBlemishes_Type = c.Int(nullable: false),
                        BodyBlemishes_Index = c.Int(nullable: false),
                        BodyBlemishes_Opacity = c.Single(nullable: false),
                        BodyBlemishes_ColorType = c.Int(nullable: false),
                        BodyBlemishes_ColorId = c.Int(nullable: false),
                        BodyBlemishes_SecondColorId = c.Int(nullable: false),
                        AddBodyBlemishes = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.PedProps",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Hat_Type = c.Int(nullable: false),
                        Hat_Index = c.Int(nullable: false),
                        Hat_Texture = c.Int(nullable: false),
                        Glasses_Type = c.Int(nullable: false),
                        Glasses_Index = c.Int(nullable: false),
                        Glasses_Texture = c.Int(nullable: false),
                        Ear_Type = c.Int(nullable: false),
                        Ear_Index = c.Int(nullable: false),
                        Ear_Texture = c.Int(nullable: false),
                        Watch_Type = c.Int(nullable: false),
                        Watch_Index = c.Int(nullable: false),
                        Watch_Texture = c.Int(nullable: false),
                        Bracelet_Type = c.Int(nullable: false),
                        Bracelet_Index = c.Int(nullable: false),
                        Bracelet_Texture = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
           
            
            CreateTable(
                "dbo.Containers",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        ParentContainerId = c.Guid(),
                        Name = c.String(maxLength: 1000, unicode: false),
                        Width = c.Int(nullable: false),
                        Height = c.Int(nullable: false),
                        MaxWeight = c.Single(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Containers", t => t.ParentContainerId)
                .Index(t => t.ParentContainerId);
            
            CreateTable(
                "dbo.Items",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        ItemDefinitionId = c.Guid(nullable: false),
                        ContainerId = c.Guid(),
                        Weight = c.Single(nullable: false),
                        Width = c.Int(nullable: false),
                        Height = c.Int(nullable: false),
                        X = c.Int(),
                        Y = c.Int(),
                        Rotated = c.Boolean(nullable: false, storeType: "bit"),
                        UsesRemaining = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Containers", t => t.ContainerId)
                .ForeignKey("dbo.ItemDefinitions", t => t.ItemDefinitionId, cascadeDelete: true)
                .Index(t => t.ItemDefinitionId)
                .Index(t => t.ContainerId);
            
            CreateTable(
                "dbo.ItemDefinitions",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Name = c.String(maxLength: 1000, unicode: false),
                        Description = c.String(maxLength: 1000, unicode: false),
                        Image = c.String(maxLength: 1000, unicode: false),
                        Model = c.String(maxLength: 1000, unicode: false),
                        Weight = c.Int(nullable: false),
                        Width = c.Int(nullable: false),
                        Height = c.Int(nullable: false),
                        TotalUses = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.CharacterSessions",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Connected = c.DateTime(precision: 0),
                        Disconnected = c.DateTime(precision: 0),
                        CharacterId = c.Guid(nullable: false),
                        SessionId = c.Guid(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Characters", t => t.CharacterId, cascadeDelete: true)
                .ForeignKey("dbo.Sessions", t => t.SessionId, cascadeDelete: true)
                .Index(t => t.CharacterId)
                .Index(t => t.SessionId);
            
            CreateTable(
                "dbo.WorldItems",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        ItemId = c.Guid(nullable: false),
                        Position_X = c.Single(nullable: false),
                        Position_Y = c.Single(nullable: false),
                        Position_Z = c.Single(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Items", t => t.ItemId, cascadeDelete: true)
                .Index(t => t.ItemId);
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.WorldItems", "ItemId", "dbo.Items");
            DropForeignKey("dbo.CharacterSessions", "SessionId", "dbo.Sessions");
            DropForeignKey("dbo.CharacterSessions", "CharacterId", "dbo.Characters");
            DropForeignKey("dbo.CharacterInventories", "ContainerId", "dbo.Containers");
            DropForeignKey("dbo.Containers", "ParentContainerId", "dbo.Containers");
            DropForeignKey("dbo.Items", "ItemDefinitionId", "dbo.ItemDefinitions");
            DropForeignKey("dbo.Items", "ContainerId", "dbo.Containers");
            DropForeignKey("dbo.CharacterInventories", "CharacterId", "dbo.Characters");
            DropForeignKey("dbo.Characters", "UserId", "dbo.Users");
            DropForeignKey("dbo.Characters", "PedPropsId", "dbo.PedProps");
            DropForeignKey("dbo.Characters", "PedHeadOverlaysId", "dbo.PedHeadOverlays");
            DropForeignKey("dbo.Characters", "PedHeadBlendDataId", "dbo.PedHeadBlendDatas");
            DropForeignKey("dbo.Characters", "PedFaceFeaturesId", "dbo.PedFaceFeatures");
            DropForeignKey("dbo.Characters", "PedDecorationsId", "dbo.PedDecorations");
            DropForeignKey("dbo.Characters", "PedComponentsId", "dbo.PedComponents");
            DropIndex("dbo.WorldItems", new[] { "ItemId" });
            DropIndex("dbo.CharacterSessions", new[] { "SessionId" });
            DropIndex("dbo.CharacterSessions", new[] { "CharacterId" });
            DropIndex("dbo.Items", new[] { "ContainerId" });
            DropIndex("dbo.Items", new[] { "ItemDefinitionId" });
            DropIndex("dbo.Containers", new[] { "ParentContainerId" });
            DropIndex("dbo.Characters", new[] { "UserId" });
            DropIndex("dbo.Characters", new[] { "PedPropsId" });
            DropIndex("dbo.Characters", new[] { "PedComponentsId" });
            DropIndex("dbo.Characters", new[] { "PedDecorationsId" });
            DropIndex("dbo.Characters", new[] { "PedHeadOverlaysId" });
            DropIndex("dbo.Characters", new[] { "PedFaceFeaturesId" });
            DropIndex("dbo.Characters", new[] { "PedHeadBlendDataId" });
            DropIndex("dbo.CharacterInventories", new[] { "ContainerId" });
            DropIndex("dbo.CharacterInventories", new[] { "CharacterId" });
            DropTable("dbo.WorldItems");
            DropTable("dbo.CharacterSessions");
            DropTable("dbo.ItemDefinitions");
            DropTable("dbo.Items");
            DropTable("dbo.Containers");
            DropTable("dbo.PedProps");
            DropTable("dbo.PedHeadOverlays");
            DropTable("dbo.PedHeadBlendDatas");
            DropTable("dbo.PedFaceFeatures");
            DropTable("dbo.PedDecorations");
            DropTable("dbo.PedComponents");
            DropTable("dbo.Characters");
            DropTable("dbo.CharacterInventories");
        }
    }
}
